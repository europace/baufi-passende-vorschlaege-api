import org.yaml.snakeyaml.Yaml

buildscript {
  repositories {
    mavenCentral()
  }
  dependencies {
  }
}

plugins {
  id 'org.openapi.generator' version '6.0.1'
  id 'java'
  id 'maven-publish'
  id 'net.researchgate.release' version '3.0.1'
}

project.ext {
  name = 'Passende FinanzierungsVorschl√§ge API'
  artifactId = 'baufi-passende-vorschlaege-api'
  groupId = 'de.europace'
  version = "${version}"
}

group = 'de.europace'

repositories {
  mavenCentral()
}

publishing {
  publications {
    mavenJava(MavenPublication) {
      version = "${property("version")}".toString()
      artifact "$rootDir/api/baufi-passende-vorschlaege-api.yaml"
    }
  }
}

def apiFileName = "$rootDir/api/${property("baufi.passende.vorschlaege.api.file.name")}"
def apiConfig = new Yaml().load( new File(apiFileName).newInputStream() )

task assertVersions() {
  doLast {
    def openApiConfigVersion = apiConfig.info.version
    def releaseArtifactVersion = "${version}"
    if (openApiConfigVersion != releaseArtifactVersion) {
      throw new BuildCancelledException("Mismatching API and artifact versions. API version: '$openApiConfigVersion' gradle artifact version: '$releaseArtifactVersion'")
    }
  }
}

openApiValidate {
  inputSpec.set apiFileName
  recommend.set true
}


openApiGenerate {
  generatorName.set 'javascript'
  inputSpec.set 'api/baufi-passende-vorschlaege-api.yaml'
  outputDir.set "$buildDir/generated".toString()
  apiPackage.set 'de.europace.baufi.passende.vorschlaege.api'
  modelPackage.set 'de.hypoport.ep2.baufismart.passende.vorschlaege.model'
}

release {
  failOnCommitNeeded = false
  git {
    requireBranch = 'main'
    pushToRemote = 'origin'
  }
}

tasks.openApiValidate.dependsOn tasks.assertVersions
publish.dependsOn tasks.openApiValidate

afterReleaseBuild.dependsOn publish
