openapi: 3.0.2
info:
  description: API for getting recommended mortgage offers.
  version: 0.0.1
  title: Recommended offers API
paths:
  /offers:
    post:
      summary: "Get recommended offers based on consumer data (currently 1)"
      operationId: "getOffers"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomerData"
      responses:
        "200":
          $ref: "#/components/schemas/Offer"
        "400":
          description: "Bad request"
        "404":
          description: "Not found (will be returned if input is valid but no offer could be created anyway)"
        "405":
          description: "Invalid input"
        "500":
          description: "Internal server error"
components:
  schemas:
    CustomerData:
      type: object
      properties:
        customer:
          type: array
          items:
            $ref: '#/components/schemas/Customer'
        household:
          type: array
          items:
            $ref: '#/components/schemas/Household'
        realEstate:
          $ref: '#/components/schemas/RealEstate'
        preferences:
          $ref: '#/components/schemas/Preferences'
      required:
        - Customer
        - Household
        - RealEstate
    Customer:
      type: object
      properties:
        selfEmployed:
          type: boolean
        employedSince:
          type: string
          format: date
        workLimited:
          type: boolean
          description: 'true if employment contract is temporarily, false otherwise'
        netIncome:
          type: number
        dateOfBirth:
          type: string
          format: date
        typeOfEmployment:
          enum:
            - ANGESTELLTER
            - ARBEITER
            - BEAMTER
            - FREIBERUFLER
            - SELBSTSTAENDIGER
            - RENTER
            - HAUSMANN
            - ARBEITSLOSER
      required:
        - netIncome
    Household:
      type: object
      properties:
        bankSparGuthaben:
          type: number
          example: 14500
        sonstigeEinnahmen:
          type: number
          example: 380
        nichtabgeloestePrivateDarlehenRestschuld:
          type: number
          example: 42000
        nichtabgeloesteRatenkrediteRestschuld:
          type: number
          example: 8500
    RealEstate:
      type: object
      properties:
        objektArt:
          enum:
            - DOPPELHAUSHAELFTE
            - EINFAMILIENHAUS
            - MEHRFAMILIENHAUS
            - REIHENHAUS
            - ZWEIFAMILIENHAUS
        rented:
          type: boolean
          description: 'true if the real estate is rented to another person, false otherwise'
        constructionYear:
          type: integer
        commercialUnit:
          type: boolean
        zipCode:
          type: string
        livingSpace:
          type: number
          description: 'in square meters'
          example: 120.50
        grundstueckKaufpreis:
          type: number
          description: 'land purchase price in euro'
          example: 380000
        kaufpreis:
          type: number
          description: 'real estate purchase price in euro (land purchase price excluded)'
          example: 250000
        herstellungskostenInklusiveEigenleistung:
          type: number
          description: 'cost of creation not included in "kaufpreis", including worth of personal contribution'
        modernisierungsKostenInklusiveEigenleistungen:
          type: number
          description: 'cost of additional modernisations not included in "kaufpreis", including worth of personal contribution'
          example: 10000
    Preferences:
      type: object
      properties:
        laufzeit:
          type: integer
          description: 'in years. 0 means: as soon as possible'
        wunschRate:
          type: number
        einzugsDatum:
          type: string
          format: date
        entscheidungsBisDatum:
          type: string
          format: date
    Offer:
      type: object
      properties:
        annahmeFrist:
          type: string
          format: date-time
        bausparAngebote:
          type: array
          items:
            $ref: '#/definitions/BausparAngebot'
        darlehen:
          type: array
          items:
            $ref: '#/definitions/Darlehen'
        darlehensSumme:
          type: number
        sollZins:
          type: number
        effektivZins:
          type: number
        kennung:
          type: string
    BausparAngebot:
      type: object
    Darlehen:
      type: object
      properties:
        auszahlungsBetrag:
          type: number
          description: Der Auszahlungsbetrag ist der Nettodarlehensbetrag
        auszahlungsDatum:
          type: string
          format: date
        darlehensBetrag:
          type: number
        effektivZins:
          type: number
        finanzierenderProduktAnbieter:
          description: Kann z.B. bei KfW abweichen vom produktAnbieter
          type: string
        gesamtkosten:
          type: number
        gesamtlaufzeitInMonaten:
          type: integer
          format: int32
        id:
          type: string
        produktAnbieter:
          type: string
        rateMonatlich:
          type: number
        sollZins:
          type: number
        tilgung:
          type: number
        typ:
          type: string
          enum:
            - ANNUITAETEN_DARLEHEN
            - FORWARD_DARLEHEN
            - REGIONAL_FOERDER_DARLEHEN
            - KFW_DARLEHEN
            - PRIVAT_DARLEHEN
            - ZWISCHEN_FINANZIERUNG
            - VARIABLES_DARLEHEN
            - BAUSPARVERTRAG
        zinsBindung:
          type: integer
        zinsZahlungsBeginnAm:
          type: string
          format: date
      title: Darlehen


#
#  Folgende Werte sind bisher nur über Präferenzen erfasst worden und müssen zukünftig als zentrale Parameter eines Finanzierungswunsches berücksichtigt werden
#
#  Laufzeit (als Stichtag falls gewünscht)
#
#  Wunschrate
#
#  Einzugsdatum/Fertigstellung
#
#  Entscheidung bis Datum
#
#  Für eine valide Market Engine-Anfrgae werden dann noch folgende Werte benötigt, die aus den Eingabedaten berechnet werden können
#
#Darlehensbetrag: Kaufpreis+Nebenkosten-Eigenkapital
#
#BZ-Zeit: Einzugsdatum - Entscheidungsdatum
#
#Tilgung:  Tigungsplan-Rechner
#
#Förderfähig: Neubau, eigengenutzt, kein Gewerbe - KfW55,
#
#Nebenkosten: Bundesland (Makler/Grunderwerb/Notar)
#
#  Lage (RedShift-Geodaten-Service, urban, Küste)
#
#  SoTi (eigentlich immer JA)

# TODO:
# - weitere In-Felder definieren
# - Präferenzen mit Jens klären
# - brauchen wir Machbarkeiten? Oder Erfolgsaussicht?
# - welche Felder sind must have - welche nice to have?
# - brauchen wir für v0.1 Meldungen?
# - Darlehen and BausparAngebot definieren
# - brauchen wir am Input selbstständig + Beschäftigungsverhältnis?
# - englische Beschreibungen für deutsche Properties
# - beispiel-Werte hinzufügen
# - manche Feld-Namen VWZ-bezogen (z.B. 'kaufpreis'). Vorschlag: generischere Benamung ('Preis' / 'price')
# - dokumentieren: herstellungskostenInklusiveEigenleistung vs modernisierungsKostenInklusiveEigenleistungen
